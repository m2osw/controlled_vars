// WARNING: this file is created from controlled_vars_version.h.in
// WARNING: make sure to edit the source (.h.in) if you want to make
// WARNING: changes
//
// File:	controlled_vars_version.h
// Object:	Help you by constraining basic types like classes.
//
// Copyright:	Copyright (c) 2005-2012 Made to Order Software Corp.
//		All Rights Reserved.
//
// http://snapwebsites.org/
// contact@m2osw.com
//
// Permission is hereby granted, free of charge, to any person obtaining a copy
// of this software and associated documentation files (the "Software"), to deal
// in the Software without restriction, including without limitation the rights
// to use, copy, modify, merge, publish, distribute, sublicense, and/or sell
// copies of the Software, and to permit persons to whom the Software is
// furnished to do so, subject to the following conditions:
//
// The above copyright notice and this permission notice shall be included in
// all copies or substantial portions of the Software.
//
// THE SOFTWARE IS PROVIDED "AS IS", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR
// IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY,
// FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE
// AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER
// LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM,
// OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN
// THE SOFTWARE.
//
#ifndef CONTROLLED_VARS_VERSION_H
#define CONTROLLED_VARS_VERSION_H
#ifdef _MSC_VER
#if _MSC_VER > 1000
#pragma once
#endif
#elif defined(__GNUC__)
#if (__GNUC__ == 3 && __GNUC_MINOR__ >= 4) || (__GNUC__ >= 4)
#pragma once
#endif
#endif
#define CONTROLLED_VARS_MAJOR @CONTROLLED_VARS_MAJOR@
#define CONTROLLED_VARS_MINOR @CONTROLLED_VARS_MINOR@
#define CONTROLLED_VARS_PATCH @CONTROLLED_VARS_PATCH@
namespace controlled_vars {
inline int controlled_vars_major() { return @CONTROLLED_VARS_MAJOR@; }
inline int controlled_vars_minor() { return @CONTROLLED_VARS_MINOR@; }
inline int controlled_vars_patch() { return @CONTROLLED_VARS_PATCH@; }
inline const char *controlled_vars_version() { return "@CONTROLLED_VARS_MAJOR@.@CONTROLLED_VARS_MINOR@.@CONTROLLED_VARS_PATCH@"; }
}
#endif
// #ifndef CONTROLLED_VARS_VERSION_H
